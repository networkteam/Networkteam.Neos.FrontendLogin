prototype(Networkteam.Neos.FrontendLogin:Components.Atoms.AccountProps) < prototype(Neos.Neos:ContentComponent) {
    actionUri = Neos.Fusion:UriBuilder {
        package = 'Networkteam.Neos.FrontendLogin'
        controller = 'Authentication'
        action = 'logout'
    }

    redirectAfterLogoutUri = Neos.Neos:NodeUri {
        node = ${q(node).context({inaccessibleContentShown: true}).property('redirectAfterLogout')}
        @process.hmac = ${Networkteam.Neos.FrontendLogin.Hash.appendHmac(value)}
    }

    labels = Neos.Fusion:RawArray {
        statusMessage = Networkteam.Neos.FrontendLogin:TranslatedValue {
            id = 'components.atoms.account.statusMessage'
            arguments {
                0 = ${Security.account.accountIdentifier}
            }
        }
        logout = Networkteam.Neos.FrontendLogin:TranslatedValue {
            id = 'components.atoms.account.logout'
        }
    }

    @cache {
        mode = 'uncached'
        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
        }
    }

    renderer = ''
}
